# https://github.com/hhatto/autopep8#usage
# https://github.com/hhatto/autopep8#more-advanced-usage
[tool.autopep8]
aggressive = 3
ignore = [
  # TODO Suggest "multi-line method invocation style" to Ruff. and/or change to Black
  # https://github.com/charliermarsh/ruff/issues/3713
  "E124", # Closing bracket may not match multi-line method invocation style (enforced by add-trailing-comma)
  "E402", # Allow imports at the bottom of file
  "E70", # Allow ... on same line as def
  "E721", # Breaks when needing an exact type
  "W503", # Linebreak before binary operator
  # Autofixed by Ruff
  # Check for the "Fix" flag https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
  "E2", # Whitespace
  "E3", # Blank lines
  "E502", # Remove extraneous escape of newline
  "E703", #	useless-semicolon
  "E71", # Statement (comparisons)
  "E731", # lambda-assignment
  "W29", # Whitespace warning
  "W391", # Remove trailing blank lines
  "W605", # invalid-escape-sequence
  # Autofixed by other Ruff rules
  "E401", # I001: unsorted-imports
  "W690", # UP: pyupgrade
]
max_line_length = 100
per_file_ignores = ["*.pyi: E302"]

# https://github.com/microsoft/pyright/blob/main/docs/configuration.md#sample-pyprojecttoml-file
[tool.pyright]
extraPaths = ["Dolphin scripts/typings"]
# Minimal python version supported (same as https://github.com/Felk/dolphin/releases/tag/scripting-preview3 )
pythonVersion = "3.11"
typeCheckingMode = "strict"
# Extra strict
reportCallInDefaultInitializer = "error"
reportImplicitStringConcatenation = "error"
reportPropertyTypeMismatch = "error"
reportShadowedImports = "error"
reportUninitializedInstanceVariable = "error"
reportUnnecessaryTypeIgnoreComment = "error"
# Use `pyright: ignore`, not `type: ignore`
enableTypeIgnoreComments = false
# External type stubs may not be completable
reportMissingTypeStubs = "warning"
# False positives with TYPE_CHECKING
reportImportCycles = "information"
# Extra runtime safety
reportUnnecessaryComparison = "warning"
# Too strict
reportMissingSuperCall = "none"
reportUnusedCallResult = "none"

# Once we have multiple changelogs to maintain, see
# https://towncrier.readthedocs.io/en/latest/monorepo.html
[tool.towncrier]
directory = "Dolphin scripts/Entrance Randomizer/newsfragments"
filename = "Dolphin scripts/Entrance Randomizer/CHANGELOG.md"
issue_format = "[#{issue}](https://github.com/Avasam/ptle-tools/issues/{issue})"
package = "Entrance Randomizer"
package_dir = "Dolphin scripts"
start_string = "<!-- towncrier release notes start -->\n"
title_format = "## {version} - {project_date}"
underlines = ["", "", ""]
