# https://beta.ruff.rs/docs/configuration
[tool.ruff]
line-length = 120
select = ["ALL"]
target-version = "py38"
# https://beta.ruff.rs/docs/rules
ignore = [
  ###
  # Not needed or wanted
  ###
  "D1", # pydocstyle Missing doctring
  "D401", # pydocstyle: non-imperative-mood
  "EM", # flake8-errmsg
  "FBT", # flake8-boolean-trap
  "INP", # flake8-no-pep420
  "ISC003", # flake8-implicit-str-concat: explicit-string-concatenation
  # Short messages are still considered "long" messages
  "TRY003", # tryceratops : raise-vanilla-args
  # Don't remove commented code, also too inconsistant
  "ERA001", # eradicate: commented-out-code
  # contextlib.suppress is roughly 3x slower than try/except
  "SIM105", # flake8-simplify: use-contextlib-suppress
  # Checked by type-checker (pyright)
  "ANN", # flake-annotations
  "PGH003", # blanket-type-ignore
  "TCH", # flake8-type-checking
  # Already shown by Pylance, checked by pyright, and can be caused by overloads.
  "ARG002", # Unused method argument
  # We want D213: multi-line-summary-second-line and D211: no-blank-line-before-class
  "D203", # pydocstyle: one-blank-line-before-class
  "D212", # pydocstyle: multi-line-summary-first-line
  # Allow differentiating between broken (FIXME) and to be done/added/completed (TODO)
  "TD001", # flake8-todos: invalid-todo-tag

  ###
  # These should be warnings (https://github.com/charliermarsh/ruff/issues/1256)
  ###
  "FIX", # flake8-fixme
  # Not all TODOs are worth an issue, this would be better as a warning
  "TD003", # flake8-todos: missing-todo-link

  # False-positives
  "TCH004", # https://github.com/astral-sh/ruff/issues/3821
]

###
# Project(s)-specifics
###
[tool.ruff.per-file-ignores]
"*.pyi" = [
  "I002", # Stubs don't need from __future__ import annotations
  "PLC0414", # https://github.com/charliermarsh/ruff/issues/3734
]
"Dolphin scripts/Entrance Randomizer/**.py" = [
  "F405", # Allow * import from constants since we use a lot, but not all
  "PLW0603", # Using globals due to the nature of this script
  # Print are used as debug logs
  "T20", # flake8-print
  # Project is too simple to create our own errors
  "TRY002", # raise-vanilla-class
  # We don't do cryptography in this project
  "S311", # suspicious-non-cryptographic-random-usage
]
"Dolphin scripts/Entrance Randomizer/__main__.py" = [
  "E402", # Python path must first be set in __main__
]
"Dolphin scripts/typings/*.pyi" = [
  "D205", # External stubs, allow docstring w/o summary line
  "E501", # External stubs, ignore line-length
  "PYI021", # No source, keep docstrings
]

# https://beta.ruff.rs/docs/settings/#flake8-implicit-str-concat
[tool.ruff.flake8-implicit-str-concat]
allow-multiline = false

# https://beta.ruff.rs/docs/settings/#isort
[tool.ruff.isort]
combine-as-imports = true
required-imports = ["from __future__ import annotations"] # Safer with Python 3.8 and 3.9
split-on-trailing-comma = false

# https://beta.ruff.rs/docs/settings/#mccabe
[tool.ruff.mccabe]
# Hard limit, arbitrary to 4 bytes
max-complexity = 31
# Arbitrary to 2 bytes, same as SonarLint
# max-complexity = 15

[tool.ruff.pylint]
# Arbitrary to 1 byte, same as SonarLint
max-args = 7
# At least same as max-complexity
max-branches = 15

### Possible future ruff.pylint configurations
# https://github.com/charliermarsh/ruff/issues/970
# # Dynamic/Generated members from SQLAlchemy
# ignored-classes = ["scoped_session"]
# # Arbitrary to 2 bytes
# max-attributes = 15
# max-locals = 15
# disable = [
#   # No need to mention the fixmes
#   "fixme",
#   "missing-docstring",
#   # Already taken care of and grayed out. Also conflicts with Pylance reportIncompatibleMethodOverride
#   "unused-argument",
#   # Only reports a single instance. Pyright does a better job anyway
#   "cyclic-import",
#   # Strings are ok. Pylance also doesn't seem to see our overriden Exception classes (TODO: Make it better?)
#   "invalid-sequence-index",
#   # Happens too often with Flask, child classes should not be affected by this rule
#   # See: https://github.com/PyCQA/pylint/issues/4352
#   "too-few-public-methods",
#   # Similar lines in 2 files, doesn't really work
#   "R0801",
# ]

# https://github.com/hhatto/autopep8#usage
# https://github.com/hhatto/autopep8#more-advanced-usage
[tool.autopep8]
aggressive = 3
ignore = [
  # TODO Suggest "multi-line method invocation style" to Ruff. and/or change to Black
  # https://github.com/charliermarsh/ruff/issues/3713
  "E124", # Closing bracket may not match multi-line method invocation style (enforced by add-trailing-comma)
  "E402", # Allow imports at the bottom of file
  "E70", # Allow ... on same line as def
  "W503", # Linebreak before binary operator
]
max_line_length = 120
per_file_ignores = ["*.pyi: E302"]

# https://github.com/microsoft/pyright/blob/main/docs/configuration.md#sample-pyprojecttoml-file
[tool.pyright]
# Minimal python version supported
extraPaths = ["Dolphin scripts/typings"]
pythonVersion = "3.8.5"
typeCheckingMode = "strict"
# Extra strict
reportCallInDefaultInitializer = "error"
reportImplicitStringConcatenation = "error"
reportPropertyTypeMismatch = "error"
reportShadowedImports = "error"
reportUninitializedInstanceVariable = "error"
reportUnnecessaryTypeIgnoreComment = "error"
# Use `pyright: ignore`, not `type: ignore`
enableTypeIgnoreComments = false
# External type stubs may not be completable
reportMissingTypeStubs = "warning"
# False positives with TYPE_CHECKING
reportImportCycles = "information"
# Extra runtime safety
reportUnnecessaryComparison = "warning"
# Too strict
reportMissingSuperCall = "none"
reportUnusedCallResult = "none"
