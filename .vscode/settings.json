{
  "editor.formatOnSave": true,
  "editor.codeActionsOnSave": {
    "source.fixAll": "explicit"
  },
  "files.associations": {
    "*.dmw": "json",
    "pyrightconfig*.json": "jsonc",
    "dprint*.json": "jsonc",
    ".flake8": "properties"
  },
  "files.exclude": {
    "**/.mypy_cache": true,
    "**/__pycache__": true,
    "**/.ruff_cache": true
  },
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "editor.comments.insertSpace": true,
  "editor.insertSpaces": true,
  "editor.detectIndentation": false,
  "editor.tabSize": 2,
  "editor.rulers": [
    80,
    120
  ],
  "[git-commit]": {
    "editor.rulers": [
      72
    ]
  },
  "[json][jsonc][javascript][javascriptreact][typescript][typescriptreact][dockerfile]": {
    "editor.defaultFormatter": "dprint.dprint"
  },
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml"
  },
  "[markdown]": {
    "editor.defaultFormatter": "DavidAnson.vscode-markdownlint"
  },
  "[python]": {
    // Ruff is not yet a formatter: https://github.com/charliermarsh/ruff/issues/1904
    "editor.defaultFormatter": "ms-python.autopep8",
    "editor.tabSize": 4,
    "editor.rulers": [
      72, // PEP8-17 docstrings
      // 79, // PEP8-17 default max
      // 88, // Black default
      // 99, // PEP8-17 acceptable max
      120 // Our hard rule
    ],
    "editor.codeActionsOnSave": {
      // TODO: Ruff is supposed to be able to take care of this
      "source.organizeImports": "never"
    }
  },
  "python.analysis.stubPath": "Dolphin scripts/typings",
  // Important to respect the config in pyrightconfig.json
  "python.analysis.useLibraryCodeForTypes": false,
  "python.analysis.diagnosticMode": "workspace",
  "python.analysis.fixAll": [
    "source.convertImportFormat"
    // Specifically ignoring unusedImports because it's annoying to loose imports when commenting code for testing
    // "source.unusedImports"
  ],
  "python.linting.enabled": true,
  "ruff.importStrategy": "fromEnvironment",
  // Use the Ruff extension instead
  "isort.check": false,
  "python.linting.banditEnabled": false,
  "python.linting.flake8Enabled": false,
  "python.linting.prospectorEnabled": false,
  "python.linting.pycodestyleEnabled": false,
  "python.linting.pylamaEnabled": false,
  "python.linting.pylintEnabled": false,
  // Use the autopep8 extension instead
  "python.formatting.provider": "none",
  // Use Pyright/Pylance instead
  "python.linting.mypyEnabled": false,
  "emeraldwalk.runonsave": {
    "commands": [
      {
        "match": "\\.pyi?",
        "cmd": "add-trailing-comma \"${file}\" --py36-plus"
      }
    ]
  },
  "[toml]": {
    "editor.defaultFormatter": "tamasfe.even-better-toml"
  },
  "evenBetterToml.formatter.alignComments": false,
  "evenBetterToml.formatter.alignEntries": false,
  "evenBetterToml.formatter.allowedBlankLines": 1,
  "evenBetterToml.formatter.arrayAutoCollapse": true,
  "evenBetterToml.formatter.arrayAutoExpand": true,
  "evenBetterToml.formatter.arrayTrailingComma": true,
  "evenBetterToml.formatter.columnWidth": 120,
  "evenBetterToml.formatter.compactArrays": true,
  "evenBetterToml.formatter.compactEntries": false,
  "evenBetterToml.formatter.compactInlineTables": false,
  "evenBetterToml.formatter.indentEntries": false,
  "evenBetterToml.formatter.indentTables": false,
  "evenBetterToml.formatter.inlineTableExpand": false,
  "evenBetterToml.formatter.reorderArrays": true,
  "evenBetterToml.formatter.reorderKeys": true,
  "evenBetterToml.formatter.trailingNewline": true,
  "[powershell]": {
    "editor.defaultFormatter": "ms-vscode.powershell"
  },
  "powershell.codeFormatting.pipelineIndentationStyle": "IncreaseIndentationForFirstPipeline",
  "powershell.codeFormatting.autoCorrectAliases": true,
  "powershell.codeFormatting.trimWhitespaceAroundPipe": true,
  "powershell.codeFormatting.useConstantStrings": true,
  "powershell.codeFormatting.useCorrectCasing": true,
  "powershell.codeFormatting.whitespaceBetweenParameters": true,
  "powershell.integratedConsole.showOnStartup": false,
  "terminal.integrated.defaultProfile.windows": "PowerShell"
}
